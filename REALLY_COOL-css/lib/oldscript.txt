              //                             collision script
      //psudo code:
      // if point y intersect (move y) else if point x intersect (move x)
      //else, repeat for next point
      var canJump = false;
      var waterPower = false;
      this.x+=this.velocity.x;
      this.y+=this.velocity.y;
      let startCol = Math.floor((this.x)/50);
      let endCol = Math.ceil((this.x+(this.width))/50);
      for(let i = startCol; i < endCol; i++) {
        let t = this.layer.map.getTile(i, Math.floor((this.y+this.height)/50));
        if(t==4||t==5){
            waterPower = true;
          }
        if(t!=this.layer.emptyTile&&t!=4&&t!=5) {
          
          
          this.y=((Math.floor((this.y)/50))*50);
          this.velocity.y = 0;
          ((i)*50)>=Math.floor((this.x+(this.width-1))/50)*50&&((i)*50)+50<=Math.floor((this.x+(this.width-1))/50)*50?null:canJump=true;
          
          GMKeys["d"] ? this.velocity.x += 4 : null;
          GMKeys["a"] ? this.velocity.x -= 4 : null;
          
          this.velocity.x *= 0.8;
          if(t==12){
            if(iMap<maps.length-1) {
              let x = this.middleX;
              let y = this.middleY+this.height;
                
              for(let i = 0; i<20; i++){
                  let a = this.eggExplodeParticles.pushParticle(x,y,0,50);
                  this.eggExplodeParticles.particles[a].velocity.x=Math.floor(Math.random() * 20)-10; 
                  this.eggExplodeParticles.particles[a].velocity.y=Math.floor(Math.random() * 20)-10; 
                  this.eggExplodeParticles.particles[a].velocity.rotation=this.eggExplodeParticles.particles[a].velocity.x;
              }
              nextmapFN()
            }else{
              var x = this.middleX;
              var y = this.middleY+this.height;
                
              for(let s = 0; s<20; s++){
                  let a = this.eggExplodeParticles.pushParticle(x,y,0,50);
                  this.eggExplodeParticles.particles[a].velocity.x=Math.floor(Math.random() * 20)-10; 
                  this.eggExplodeParticles.particles[a].velocity.y=Math.floor(Math.random() * 20)-10; 
                  this.eggExplodeParticles.particles[a].velocity.rotation=this.eggExplodeParticles.particles[a].velocity.x;
              }
              for (let b = 0; b < 30; b++) {
                var x = Math.floor(Math.random() * canvas.width);
                var y = Math.floor(Math.random() * canvas.height);
                
                for(let r = 0; r<20; r++){
                  let a = this.eggExplodeParticles.pushParticle(x,y,0,50);
                  this.eggExplodeParticles.particles[a].velocity.x=Math.floor(Math.random() * 20)-10; 
                  this.eggExplodeParticles.particles[a].velocity.y=Math.floor(Math.random() * 20)-10; 
                  this.eggExplodeParticles.particles[a].velocity.rotation=this.eggExplodeParticles.particles[a].velocity.x;
                }
                this.layer.tilemap[this.layer.map.getTileIndex(i, Math.floor((this.y+this.height)/50))] = 4;
              }
              
              
            }
        }
        if(t==2){
          this.x = (10*50);
          this.y = (10*50);
        }
        } else {
            
          GMKeys["d"] ? this.velocity.x += 4 : null;
          GMKeys["a"] ? this.velocity.x -= 4 : null;
          this.velocity.x *= 0.8;
          this.velocity.y+=0.5;
        }
      }
      let startRow = Math.floor(this.y/50);
      let endRow = Math.floor((this.y+this.height)/50);
      //console.log(startRow + "  :  " + endRow)
      for(let i = startRow; i < endRow; i++) {
        let t = this.layer.map.getTile(Math.floor((this.x)/50), i);
        if(t==4||t==5){
            waterPower = true;
          }
        if(t!=this.layer.emptyTile&&t!=4&&t!=5) {
          
          this.x=((Math.ceil((this.x)/50))*50);
          this.velocity.x = 0;
        }
      }
      
      startCol = Math.floor((this.x)/50);
      endCol = Math.floor((this.x+(this.width))/50);
      
      for(let i = startCol; i < endCol; i++) {
        let t = this.layer.map.getTile(i, Math.floor((this.y)/50));
        if(t==4||t==5){
            waterPower = true;
          }
        if(t!=this.layer.emptyTile&&t!=4&&t!=5){
          this.y=((Math.ceil((this.y)/50))*50);
          this.velocity.y = 0;
        }
      }
      
      startRow = Math.floor(this.y/50);
      endRow = Math.floor((this.y+this.height)/50);
      
      for(let i = startRow; i < endRow; i++){
        let t = this.layer.map.getTile(Math.floor((this.x+this.width)/50), i);
        if(t==4||t==5){
            waterPower = true;
          }
        if(t!=this.layer.emptyTile&&t!=4&&t!=5) {
          
          this.x=((Math.floor((this.x)/50))*50);
          this.velocity.x = 0;
          GMKeys["a"] ? this.velocity.x -= 4 : null;
        }
      }
      if(waterPower){
        this.jumpHeight=40;
      }else{
        this.jumpHeight=30;
      }
      
      if(this.velocity.y<0||this.velocity.y>1){
        canJump=false;
      }
      canJump && GMKeys["w"] ? this.velocity.y -= this.jumpHeight : null;
      /*
      this.y=((Math.floor((player.y)/50))*50);
      this.velocity.y = 0;
      
      keydown["w"] ? this.velocity.y -= this.jumpHeight : null;
      keydown["d"] ? this.velocity.x += 4 : null;
      keydown["a"] ? this.velocity.x -= 4 : null;
      this.velocity.x *= 0.8;*/
      
      
      
      //                            particle updating
      
      this.eggExplodeParticles.particles.forEach((x,i,a)=>{
        if(x.x>=ctx.canvas.width+100||x.x<=0-100||x.y>=ctx.canvas.height+100||x.y<=0-100){
            a.splice(i,1);
        }
    });